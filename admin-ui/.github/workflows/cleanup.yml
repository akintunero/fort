name: Cleanup

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly at midnight on Sunday
  workflow_dispatch:  # Allow manual trigger

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Cleanup S3 bucket
      run: |
        aws s3 ls s3://${{ secrets.AWS_BUCKET }}/admin-ui-backup/ | sort -r | tail -n +31 | while read -r line; do
          filename=$(echo "$line" | awk '{print $4}')
          aws s3 rm "s3://${{ secrets.AWS_BUCKET }}/admin-ui-backup/$filename" --recursive
        done

    - name: Cleanup DynamoDB backups
      run: |
        aws dynamodb list-backups | jq -r '.BackupSummaries[].BackupArn' | sort -r | tail -n +31 | while read -r backup; do
          aws dynamodb delete-backup --backup-arn $backup
        done

    - name: Cleanup RDS snapshots
      run: |
        aws rds describe-db-snapshots | jq -r '.DBSnapshots[].DBSnapshotIdentifier' | sort -r | tail -n +31 | while read -r snapshot; do
          aws rds delete-db-snapshot --db-snapshot-identifier $snapshot
        done

    - name: Cleanup EFS backups
      run: |
        aws efs describe-backups | jq -r '.Backups[].BackupId' | sort -r | tail -n +31 | while read -r backup; do
          aws efs delete-backup --backup-id $backup
        done

    - name: Cleanup EBS snapshots
      run: |
        aws ec2 describe-snapshots --owner-ids self | jq -r '.Snapshots[].SnapshotId' | sort -r | tail -n +31 | while read -r snapshot; do
          aws ec2 delete-snapshot --snapshot-id $snapshot
        done

    - name: Cleanup ECR images
      run: |
        aws ecr describe-images --repository-name admin-ui | jq -r '.imageDetails[].imageTags[]' | sort -r | tail -n +31 | while read -r tag; do
          aws ecr batch-delete-image --repository-name admin-ui --image-ids imageTag=$tag
        done

    - name: Cleanup Secrets Manager secrets
      run: |
        aws secretsmanager list-secrets | jq -r '.SecretList[].Name' | sort -r | tail -n +31 | while read -r secret; do
          aws secretsmanager delete-secret --secret-id $secret --force-delete-without-recovery
        done

    - name: Cleanup Systems Manager parameters
      run: |
        aws ssm get-parameters-by-path --path /admin-ui/ --recursive | jq -r '.Parameters[].Name' | sort -r | tail -n +31 | while read -r param; do
          aws ssm delete-parameter --name $param
        done

    - name: Cleanup CloudWatch logs
      run: |
        aws logs describe-log-groups | jq -r '.logGroups[].logGroupName' | sort -r | tail -n +31 | while read -r group; do
          aws logs delete-log-group --log-group-name $group
        done

    - name: Cleanup CloudTrail logs
      run: |
        aws s3 ls s3://admin-ui-trail-logs/ | sort -r | tail -n +31 | while read -r line; do
          filename=$(echo "$line" | awk '{print $4}')
          aws s3 rm "s3://admin-ui-trail-logs/$filename" --recursive
        done

    - name: Cleanup Config rules
      run: |
        aws configservice describe-config-rules | jq -r '.ConfigRules[].ConfigRuleName' | sort -r | tail -n +31 | while read -r rule; do
          aws configservice delete-config-rule --config-rule-name $rule
        done

    - name: Cleanup GuardDuty findings
      run: |
        aws guardduty list-findings --detector-id 1234567890abcdef01234567890abcdef | jq -r '.FindingIds[]' | sort -r | tail -n +31 | while read -r finding; do
          aws guardduty archive-findings --detector-id 1234567890abcdef01234567890abcdef --finding-ids $finding
        done

    - name: Cleanup Inspector findings
      run: |
        aws inspector list-findings --assessment-run-arn arn:aws:inspector:us-east-1:123456789012:target/0-AB6DMKnv/run/0-EXAMPLE | jq -r '.findingArns[]' | sort -r | tail -n +31 | while read -r finding; do
          aws inspector delete-findings --finding-arns $finding
        done

    - name: Cleanup Macie findings
      run: |
        aws macie list-findings | jq -r '.findings[].id' | sort -r | tail -n +31 | while read -r finding; do
          aws macie archive-findings --finding-ids $finding
        done

    - name: Cleanup Shield protections
      run: |
        aws shield list-protections | jq -r '.Protections[].Id' | sort -r | tail -n +31 | while read -r protection; do
          aws shield delete-protection --protection-id $protection
        done

    - name: Cleanup WAF rules
      run: |
        aws waf list-web-acls --scope REGIONAL | jq -r '.WebACLs[].Name' | sort -r | tail -n +31 | while read -r acl; do
          aws waf delete-web-acl --name $acl --scope REGIONAL --id 1234567890abcdef01234567890abcdef
        done

    - name: Cleanup KMS keys
      run: |
        aws kms list-keys | jq -r '.Keys[].KeyId' | sort -r | tail -n +31 | while read -r key; do
          aws kms schedule-key-deletion --key-id $key --pending-window-in-days 7
        done

    - name: Cleanup Secrets Manager secrets
      run: |
        aws secretsmanager list-secrets | jq -r '.SecretList[].Name' | sort -r | tail -n +31 | while read -r secret; do
          aws secretsmanager delete-secret --secret-id $secret --force-delete-without-recovery
        done

    - name: Cleanup Systems Manager documents
      run: |
        aws ssm list-documents | jq -r '.DocumentIdentifiers[].Name' | sort -r | tail -n +31 | while read -r doc; do
          aws ssm delete-document --name $doc
        done

    - name: Cleanup CloudFormation stacks
      run: |
        aws cloudformation list-stacks | jq -r '.StackSummaries[].StackName' | sort -r | tail -n +31 | while read -r stack; do
          aws cloudformation delete-stack --stack-name $stack
        done

    - name: Cleanup Elastic Beanstalk applications
      run: |
        aws elasticbeanstalk describe-applications | jq -r '.Applications[].ApplicationName' | sort -r | tail -n +31 | while read -r app; do
          aws elasticbeanstalk delete-application --application-name $app --terminate-env-by-force
        done

    - name: Cleanup EKS clusters
      run: |
        aws eks list-clusters | jq -r '.clusters[]' | sort -r | tail -n +31 | while read -r cluster; do
          aws eks delete-cluster --name $cluster
        done

    - name: Cleanup ECR repositories
      run: |
        aws ecr describe-repositories | jq -r '.repositories[].repositoryName' | sort -r | tail -n +31 | while read -r repo; do
          aws ecr delete-repository --repository-name $repo --force
        done

    - name: Cleanup ECS clusters
      run: |
        aws ecs list-clusters | jq -r '.clusterArns[]' | sort -r | tail -n +31 | while read -r cluster; do
          aws ecs delete-cluster --cluster $cluster
        done

    - name: Cleanup ECR Public repositories
      run: |
        aws ecr-public describe-repositories | jq -r '.repositories[].repositoryName' | sort -r | tail -n +31 | while read -r repo; do
          aws ecr-public delete-repository --repository-name $repo --force
        done

    - name: Cleanup ECR Public Gallery repositories
      run: |
        aws ecr-public describe-repositories | jq -r '.repositories[].repositoryName' | sort -r | tail -n +31 | while read -r repo; do
          aws ecr-public delete-repository --repository-name $repo --force
        done 