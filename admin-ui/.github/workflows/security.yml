name: Security

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allow manual trigger

jobs:
  security:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

    - name: Run OWASP ZAP scan
      uses: zaproxy/action-full-scan@v0.4.0
      with:
        target: 'http://localhost:3001'
        rules_file_name: '.zap/rules.tsv'
        cmd_options: '-a'

    - name: Run SonarQube scan
      uses: SonarSource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        args: >
          -Dsonar.projectKey=admin-ui
          -Dsonar.sources=src
          -Dsonar.tests=src
          -Dsonar.test.inclusions=src/**/*.test.ts,src/**/*.test.tsx
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
          -Dsonar.testExecutionReportPaths=test-report.xml

    - name: Run Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'admin-ui'
        path: '.'
        format: 'HTML'
        out: 'reports'
        args: >
          --suppression suppression.xml
          --failOnCVSS 7
          --enableRetired

    - name: Run Bandit scan
      uses: PyCQA/bandit@master
      with:
        targets: 'src'
        configfile: 'bandit.yaml'
        output: 'bandit-results.json'
        format: 'json'
        severity: 'high'
        confidence: 'high'

    - name: Run Safety check
      uses: pyupio/safety@master
      with:
        api-key: ${{ secrets.SAFETY_API_KEY }}
        check: '--full-report'
        output: 'safety-report.json'

    - name: Run TruffleHog scan
      uses: trufflesecurity/trufflehog@master
      with:
        path: '.'
        base: 'HEAD'
        head: 'HEAD~1'
        extra_args: '--debug --only-verified'

    - name: Run Gitleaks scan
      uses: zricethezav/gitleaks-action@master
      with:
        config-path: '.gitleaks.toml'
        report-format: 'json'
        report-path: 'gitleaks-report.json'
        verbose: true

    - name: Run GitGuardian scan
      uses: GitGuardian/ggshield-action@master
      with:
        api-key: ${{ secrets.GITGUARDIAN_API_KEY }}
        scan-path: '.'
        exit-zero: false
        verbose: true

    - name: Run CodeQL analysis
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
        config-file: ./.github/codeql/codeql-config.yml

    - name: Run CodeQL analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: '/language:javascript'

    - name: Run Semgrep scan
      uses: returntocorp/semgrep-action@v1
      with:
        config: 'p/default'
        output: 'semgrep-results.json'
        json: true
        error: true

    - name: Run Trivy scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'admin-ui:latest'
        format: 'json'
        output: 'trivy-results.json'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Run Clair scan
      uses: quay/clair-action@master
      with:
        image: 'admin-ui:latest'
        format: 'json'
        output: 'clair-results.json'
        exit-code: '1'
        severity: 'High'

    - name: Run Anchore scan
      uses: anchore/scan-action@v3
      with:
        image: 'admin-ui:latest'
        fail-build: true
        severity-cutoff: 'high'
        timeout: '300'

    - name: Run Grype scan
      uses: anchore/grype-action@v1
      with:
        image: 'admin-ui:latest'
        output: 'json'
        file: 'grype-results.json'
        fail-on: 'high'

    - name: Run Snyk container scan
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: 'admin-ui:latest'
        args: --severity-threshold=high

    - name: Run Snyk IaC scan
      uses: snyk/actions/iac@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

    - name: Run Snyk code scan
      uses: snyk/actions/code@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

    - name: Run Snyk open source scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

    - name: Run Snyk container monitor
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: 'admin-ui:latest'
        args: --severity-threshold=high

    - name: Run Snyk IaC monitor
      uses: snyk/actions/iac@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

    - name: Run Snyk code monitor
      uses: snyk/actions/code@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

    - name: Run Snyk open source monitor
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high 