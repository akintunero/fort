name: Deploy

on:
  push:
    branches: [ master ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: admin-ui
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update ECS service
      run: |
        aws ecs update-service --cluster admin-ui-cluster --service admin-ui-service --force-new-deployment

    - name: Deploy to EC2
      run: |
        aws ec2 run-instances \
          --image-id ami-12345678 \
          --instance-type t2.micro \
          --key-name admin-ui-key \
          --security-group-ids sg-12345678 \
          --subnet-id subnet-12345678 \
          --user-data file://user-data.sh \
          --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=admin-ui}]'

    - name: Deploy to S3
      run: |
        aws s3 sync dist/ s3://${{ secrets.AWS_BUCKET }}/admin-ui/

    - name: Deploy to CloudFront
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

    - name: Deploy to Route 53
      run: |
        aws route53 change-resource-record-sets \
          --hosted-zone-id ${{ secrets.ROUTE53_HOSTED_ZONE_ID }} \
          --change-batch file://route53-changes.json

    - name: Deploy to ACM
      run: |
        aws acm request-certificate \
          --domain-name admin-ui.example.com \
          --validation-method DNS \
          --subject-alternative-names admin-ui.example.com

    - name: Deploy to IAM
      run: |
        aws iam create-role \
          --role-name admin-ui-role \
          --assume-role-policy-document file://trust-policy.json

    - name: Deploy to SNS
      run: |
        aws sns create-topic \
          --name admin-ui-topic \
          --attributes file://sns-attributes.json

    - name: Deploy to SQS
      run: |
        aws sqs create-queue \
          --queue-name admin-ui-queue \
          --attributes file://sqs-attributes.json

    - name: Deploy to DynamoDB
      run: |
        aws dynamodb create-table \
          --table-name admin-ui-table \
          --attribute-definitions file://dynamodb-attributes.json \
          --key-schema file://dynamodb-key-schema.json \
          --provisioned-throughput file://dynamodb-throughput.json

    - name: Deploy to Lambda
      run: |
        aws lambda create-function \
          --function-name admin-ui-function \
          --runtime nodejs16.x \
          --handler index.handler \
          --role arn:aws:iam::123456789012:role/admin-ui-role \
          --zip-file fileb://function.zip

    - name: Deploy to API Gateway
      run: |
        aws apigateway create-rest-api \
          --name admin-ui-api \
          --description "Admin UI API"

    - name: Deploy to CloudWatch
      run: |
        aws cloudwatch put-metric-alarm \
          --alarm-name admin-ui-alarm \
          --alarm-description "Admin UI Alarm" \
          --metric-name CPUUtilization \
          --namespace AWS/EC2 \
          --statistic Average \
          --period 300 \
          --evaluation-periods 2 \
          --threshold 80 \
          --comparison-operator GreaterThanThreshold \
          --alarm-actions arn:aws:sns:us-east-1:123456789012:admin-ui-topic

    - name: Deploy to CloudTrail
      run: |
        aws cloudtrail create-trail \
          --name admin-ui-trail \
          --s3-bucket-name admin-ui-trail-logs \
          --include-global-service-events

    - name: Deploy to Config
      run: |
        aws configservice put-config-rule \
          --config-rule file://config-rule.json

    - name: Deploy to GuardDuty
      run: |
        aws guardduty create-detector \
          --enable \
          --finding-publishing-frequency FIFTEEN_MINUTES

    - name: Deploy to Inspector
      run: |
        aws inspector create-assessment-target \
          --assessment-target-name admin-ui-target \
          --resource-group-arn arn:aws:inspector:us-east-1:123456789012:resourcegroup/0-AB6DMKnv

    - name: Deploy to Macie
      run: |
        aws macie create-sample-findings

    - name: Deploy to Shield
      run: |
        aws shield create-protection \
          --name admin-ui-protection \
          --resource-arn arn:aws:cloudfront::123456789012:distribution/E123456789ABCD

    - name: Deploy to WAF
      run: |
        aws waf create-web-acl \
          --name admin-ui-acl \
          --default-action file://waf-default-action.json \
          --scope REGIONAL \
          --visibility-config file://waf-visibility-config.json

    - name: Deploy to KMS
      run: |
        aws kms create-key \
          --description "Admin UI Key" \
          --key-usage ENCRYPT_DECRYPT \
          --origin EXTERNAL \
          --key-spec file://kms-key-spec.json

    - name: Deploy to Secrets Manager
      run: |
        aws secretsmanager create-secret \
          --name admin-ui-secret \
          --description "Admin UI Secret" \
          --secret-string file://secret.json

    - name: Deploy to Systems Manager
      run: |
        aws ssm create-document \
          --name admin-ui-document \
          --content file://document.json \
          --document-type Command

    - name: Deploy to CloudFormation
      run: |
        aws cloudformation create-stack \
          --stack-name admin-ui-stack \
          --template-body file://template.yaml \
          --capabilities CAPABILITY_IAM

    - name: Deploy to Elastic Beanstalk
      run: |
        aws elasticbeanstalk create-application \
          --application-name admin-ui-app \
          --description "Admin UI Application"

    - name: Deploy to EKS
      run: |
        aws eks create-cluster \
          --name admin-ui-cluster \
          --role-arn arn:aws:iam::123456789012:role/admin-ui-role \
          --resources-vpc-config file://vpc-config.json

    - name: Deploy to ECR
      run: |
        aws ecr create-repository \
          --repository-name admin-ui \
          --image-tag-mutability MUTABLE

    - name: Deploy to ECS
      run: |
        aws ecs create-cluster \
          --cluster-name admin-ui-cluster \
          --capacity-providers FARGATE FARGATE_SPOT \
          --default-capacity-provider-strategy file://capacity-provider-strategy.json

    - name: Deploy to ECR Public
      run: |
        aws ecr-public create-repository \
          --repository-name admin-ui \
          --image-tag-mutability MUTABLE

    - name: Deploy to ECR Public Gallery
      run: |
        aws ecr-public create-repository \
          --repository-name admin-ui \
          --image-tag-mutability MUTABLE 