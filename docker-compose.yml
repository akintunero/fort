version: '3.8'

x-build-args: &build-args
  BUILDKIT_INLINE_CACHE: 1
  DOCKER_BUILDKIT: 1

services:
  # Core services
  flask:
    build:
      context: ./flask
      args: *build-args
    ports:
      - "5001:5000"
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=telleakisp
    depends_on:
      - mysql

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=telleakisp
    volumes:
      - mysql_data:/var/lib/mysql
      - ./flask/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  # DNS
  bind:
    build:
      context: ./services/bind
      args: *build-args
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    volumes:
      - ./services/bind/config:/etc/bind
      - ./services/bind/zones:/etc/bind/zones

  # Authentication
  freeradius:
    image: freeradius/freeradius-server:latest
    ports:
      - "1812:1812/udp"
      - "1813:1813/udp"
    volumes:
      - ./services/freeradius/config:/etc/freeradius

  # Network services
  snmp:
    build:
      context: ./services/snmp
      args: *build-args
    ports:
      - "161:161/udp"
    volumes:
      - ./services/snmp/config:/etc/snmp

  # BGP Simulation
  frr:
    image: frrouting/frr:latest
    ports:
      - "179:179/tcp"
    volumes:
      - ./services/frr/config:/etc/frr

  # Additional services
  irc:
    image: inspircd/inspircd-docker:latest
    ports:
      - "6667:6667/tcp"
    volumes:
      - ./services/irc/config:/etc/inspircd

  sms-api:
    build:
      context: ./services/sms-api
      args: *build-args
    ports:
      - "8000:8000"
    environment:
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}

  # Modern UI Services
  admin-ui:
    build:
      context: ./admin-ui
      args: *build-args
    ports:
      - "3001:3001"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:4000
    depends_on:
      - flask

  router-ui:
    build:
      context: ./router-ui
      args: *build-args
    ports:
      - "3003:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000
    depends_on:
      - flask

  social-ui:
    build:
      context: ./social-ui
      args: *build-args
    ports:
      - "3002:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000
    depends_on:
      - flask

  # New services
  netflow:
    build:
      context: ./services/netflow
      args: *build-args
    ports:
      - "9995:9995/udp"
    volumes:
      - ./services/netflow/data:/data

  social:
    build:
      context: ./social
      args: *build-args
    ports:
      - "3000:3000"
    volumes:
      - ./social/data:/app/data

  admin:
    build:
      context: ./admin
      args: *build-args
    ports:
      - "4000:4000"
    volumes:
      - ./admin/data:/app/data

  git-repo:
    build:
      context: ./services/git-repo
      args: *build-args
    ports:
      - "22:22/tcp"
    volumes:
      - ./services/git-repo/data:/git

  email-dump:
    build:
      context: ./services/email-dump
      args: *build-args
    ports:
      - "25:25/tcp"
    volumes:
      - ./services/email-dump/data:/var/mail

  invoices:
    build:
      context: ./services/invoices
      args: *build-args
    ports:
      - "8001:8000"
    environment:
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}

volumes:
  mysql_data: 